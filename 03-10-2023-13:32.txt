Rangkuman Memahami Kebutuhan Aplikasi
User Requirement Specification (URS) adalah dokumen yang menyimpan informasi mengenai kebutuhan pengguna yang dibuat sebelum proses pengembangan suatu software. Dokumen ini bertujuan agar ketika ada yang membaca dokumen ini maka akan mendapatkan pemahaman yang sama akan kebutuhan user pada aplikasi.

Dokumen User Requirement Specification tidak boleh menggunakan jargon teknis yang hanya dipahami oleh kelompok tertentu, melainkan harus menggunakan bahasa yang bisa dipahami oleh seluruh stakeholder (pemegang kepentingan), seperti manajer, developer, customer, dan user. 

Beberapa teknik requirement gathering yang bisa kita gunakan adalah:

Interview, proses wawancara yang berupa tanya jawab
User Stories, menuliskan kebutuhan user sesuai dengan role dan keinginannya 
Straw Man, menyampaikan ide tanpa menggunakan kode
Prototyping, membuat sampel program yang hanya memiliki fitur-fitur utamanya saja
Spesifikasi Teknis Aplikasi yakni dokumen yang menyimpan informasi detail mengenai fungsionalitas dari sistem/aplikasi, servis, dan juga limitasi-limitasinya.

Beberapa prinsip yang perlu diperhatikan ketika membuat spesifikasi teknis aplikasi seperti berikut:

Clear (jelas)
Unambiguous (tidak ambigu)
Mudah dipahami
Complete (lengkap)
Consistent (konsisten)
Dalam proses pembuatan spesifikasi teknis aplikasi kita perlu mempertimbangkan kebutuhan dari berbagai macam stakeholder. Berikut pandangan beberapa stakeholder terkait spesifikasi teknis:

Developer
Dari sisi developer tentunya yang diperlukan ada kedetailan dan kejelasan spesifikasi. Karena merekalah yang akan mengimplementasinya ke dalam aplikasi.

Client/User
Dari sisi client meskipun spesifikasi teknis lebih mengarah ke teknis akan tetapi mereka berharap tetap bisa dimengerti. Dalam artian istilah teknis yang dipakai harus bisa dibuat semudah mungkin untuk dimengerti.

Legal
Karena spesifikasi teknis ini bisa menjadi kontrak, maka perlu memasukkan acceptance criteria dengan jelas juga. Acceptance criteria adalah klausul kriteria yang berisi apakah suatu fitur sudah berjalan dengan baik. Jika aplikasi yang dibuat lulus semua acceptance criteria maka seharusnya tidak ada masalah dari sisi kontrak/legal.
Dalam mengembangkan aplikasi, sebaiknya disiapkan juga plan B atau contingency plan. Contingency plan adalah suatu tindakan alternatif yang dipersiapkan ketika tindakan utama yang direncanakan untuk melakukan sesuatu gagal atau terhambat oleh berbagai faktor.

Berikut pokok-pokok bahasan materi yang akan Anda pelajari, seperti:

Mengetahui spesifikasi kebutuhan aplikasi perangkat lunak, beserta studi kasusnya.
Mengetahui cara aplikasi perangkat lunak bekerja dalam komputer
Menyelesaikan masalah menggunakan cara berpikir sebuah aplikasi, beserta studi kasusnya.
Mengetahui istilah flowchart, beserta studi kasusnya.
Serta mengetahui tips sikap kerja dalam kolaborasi perencanaan aplikasi dengan tim.


Spesifikasi Kebutuhan Perangkat Lunak dan Struktur Penulisannya
  

Transkrip

Apa itu Dokumen SKPL?
Pernahkah Anda mendengar istilah Spesifikasi Kebutuhan Perangkat Lunak (SKPL) atau juga bisa disebut dengan Software Requirement Specification (SRS)? Jika belum, tenang saja. Kita akan mengulasnya secara detail disertai studi kasus untuk memperkuat pemahaman Anda.

Spesifikasi Kebutuhan Perangkat Lunak (SKPL) adalah sebuah dokumen yang dibuat sebelum mengembangkan sebuah aplikasi perangkat lunak. Dokumen ini menjelaskan cara kerja dan kebutuhan fungsional maupun non-fungsional dari aplikasi yang digunakan pengguna nantinya. 

Bukan hanya itu saja, berikut keuntungan yang bisa didapatkan dari pembuatan dokumen Spesifikasi Kebutuhan Perangkat Lunak:

Keuntungan pertama adalah seorang desainer UI/UX dalam tim akan mendapat gambaran sehingga mereka dapat mendesain sesuai kebutuhan aplikasi.
Selain desainer, tim penguji aplikasi (tester) akan mendapatkan panduan untuk membuat studi kasus dalam proses pengujian aplikasi.
Bukan hanya dari sisi internal tim saja, pengguna akhir (end user) juga akan mendapatkan gambaran umum terkait aplikasi yang akan dibuat.
Bahkan, dari sisi investor juga akan mendapatkan gambaran umum terkait fitur apa saja yang ada di dalam aplikasi. Sehingga, membantu mereka untuk mengambil keputusan untuk investasi atau tidak.
Kita telah mengetahui dokumen Spesifikasi Kebutuhan Perangkat Lunak (SKPL) memiliki banyak keuntungan bagi tim pengembang aplikasi, pengguna, hingga pihak investor. Sehingga, sebuah dokumen SKPL harus memiliki informasi yang cukup untuk memenuhi semua kebutuhan dari pihak-pihak yang memiliki kepentingan tersebut.

Berikut cakupan elemen yang ada dalam dokumen Spesifikasi Kebutuhan Perangkat Lunak:

Mulai dari tujuan aplikasi;
deskripsi umum;
kebutuhan fungsional dan non fungsional;
performa aplikasi dalam proses produksi;
antarmuka eksternal atau bagaimana sebuah aplikasi berinteraksi dengan perangkat keras dan perangkat lunak lainnya;
hingga batasan sistem aplikasi yang akan dibuat.
Dari beberapa elemen tersebut mungkin Anda ingin bertanya, apa perbedaan dari kebutuhan fungsional dan non fungsional? 

Kebutuhan fungsional menggambarkan cara sistem membantu menyelesaikan tugas atau kebutuhan pengguna ketika menggunakan aplikasi. Kebutuhan fungsional ini sama halnya dengan fitur yang ditawarkan aplikasi untuk pengguna. Misalnya, dalam aplikasi pesan antar makanan secara daring adalah fitur yang memungkinkan pengguna dapat memilih menu yang tersedia di suatu restoran. Tanpa terpenuhinya kebutuhan fungsional dalam dokumen SKPL, sama halnya dengan Anda meniadakan fungsi atau fitur dari sebuah aplikasi.

Sedangkan kebutuhan non fungsional berguna untuk mendukung kebutuhan fungsional yang sudah ada. Tanpa adanya persyaratan non fungsional, sistem aplikasi masih bisa berjalan untuk memenuhi kebutuhan pengguna.

Walaupun begitu, kebutuhan non fungsional juga tetap harus diperhatikan karena dapat mempengaruhi pengalaman pengguna (user experience) ketika menggunakan aplikasi. Karena berfokus pada kenyamanan pengguna, biasanya persyaratan non fungsional ini meliputi kinerja, keandalan, keamanan, dan kegunaan dari aplikasi itu sendiri. Contohnya, ketika pengguna berhasil memesan makanan secara daring, pihak pengemudi (driver) yang mengantarkan makanan hanya dapat menghubungi pengguna melalui fitur chat yang disediakan oleh aplikasi. Sehingga, keamanan nomor pribadi pengguna akan terjamin dan tidak diketahui oleh siapa pun.

Setelah membahas panjang lebar mengenai dokumen SKPL, kira-kira bagaimana ya cara untuk membuat dokumen SKPL? Mari kita lanjutkan pembahasan ke struktur penulisan dokumen SKPL.



Struktur Penulisan Dokumen SKPL
Mengingat bahwa dokumen SKPL ini memiliki beragam pengguna, mulai dari tim manajemen, tim pengembang, hingga pengguna akhir (pelanggan dari sistem), Anda harus membuatnya secara terstruktur dan jelas. Sehingga, Anda perlu mendeskripsikan kebutuhan untuk pengguna, menjelaskan secara rinci untuk tim pengembang dan penguji, serta menambahkan informasi tentang kemungkinan pengembangan aplikasi di masa mendatang.

Anda juga dapat mengacu pada standar IEEE 1998 untuk menulis dokumen Spesifikasi Kebutuhan Perangkat Lunak. Standar ini dapat Anda sesuaikan kembali bergantung pada kebutuhan aplikasi atau perangkat lunak yang ingin dikembangkan. Untuk lebih jelasnya, simak tabel berikut ini:

Bab	Deskripsi
Pengantar

Menjelaskan secara singkat fungsi dari sistem yang dibuat dan cara kerja aplikasi. Selain itu juga menjelaskan tujuan dari aplikasi yang akan dibuat.

Glosarium

Berisi definisi istilah-istilah teknis yang ada dalam dokumen.

Kebutuhan Pengguna

Menjelaskan secara umum layanan yang disediakan sistem untuk pengguna. Deskripsi yang ada bisa menggunakan narasi biasa atau diagram supaya dapat dimengerti.

Sistem Arsitektur

Menjelaskan gambaran tingkat tinggi (high level overview) dari sistem arsitektur yang digunakan dalam aplikasi.

Spesifikasi Kebutuhan Sistem

Menjelaskan secara lebih rinci tentang kebutuhan fungsional dan non fungsional dari aplikasi yang akan dibuat. Selain itu jika sistem memiliki antarmuka dengan sistem atau perangkat keras lain juga dapat ditambahkan di sini.

Model Sistem

Menjelaskan object model, data-flow models, atau semantic data models yang digunakan dalam aplikasi.

Rencana Pengembangan Sistem

Menjelaskan asumsi Anda terkait rencana pengembangan sistem di masa depan. Bagian ini akan berguna bagi desainer aplikasi untuk tidak membatasi idenya untuk kemungkinan pengembangan sistem.

Apendiks

Menjelaskan detail tambahan yang mendukung pengembangan aplikasi

Setelah mengetahui contoh struktur dokumen SKPL di atas, mungkin Anda bertanya, Bagaimana cara menuliskannya secara langsung ke dalam dokumen SKPL? Simak uraian studi kasusnya di materi berikutnya.


Studi Kasus Pembuatan Dokumen Spesifikasi Kebutuhan Perangkat Lunak
  

Transkrip

Hai!

Setelah mengetahui kegunaan dan struktur penulisan dokumen SKPL, mari kita mulai membuat dokumen SKPL berdasarkan studi kasus tertentu.



Tujuan
Studi Kasus ini bertujuan untuk memperdalam materi tentang dokumen Spesifikasi Kebutuhan Perangkat Lunak (SKPL). Kita akan menggunakan struktur dokumen SKPL seperti pembahasan materi sebelumnya, tetapi dengan penyesuaian khusus berdasarkan aplikasi yang ingin kita buat. Beberapa bagian dari studi kasus ini akan menjawab beberapa pertanyaan umum seperti:

Bagaimana gambaran umum dari aplikasi yang akan dikembangkan?
Bagaimana cara kerja sistem yang akan dikembangkan?
Apa yang akan didapatkan oleh pengguna?
Teknologi apa saja yang digunakan dalam aplikasi?


Tahapan Proses
Kali ini kita akan membuat sebuah dokumen SKPL untuk membuat autentikasi dari halaman website. Tenang saja, kita hanya membahas fitur login dan logout dari halaman website secara sederhana.

Pertama, Anda perlu menuliskan struktur kerangka dasar dokumen SKPL. Karena contoh autentikasi website yang akan kita buat cukup sederhana, maka kerangka yang diperlukan adalah sebagai berikut:

Pengantar
Tujuan Aplikasi
Sasaran Pengguna
Kebutuhan Pengguna
Deskripsi umum dari aplikasi
Kegunaan aplikasi bagi pengguna
Spesifikasi Kebutuhan Sistem
Kebutuhan fungsional
Kebutuhan non fungsional
Antarmuka Pengguna (User interface)
Antarmuka perangkat keras (Hardware interface)
Rencana Pengembangan Sistem
Dari kerangka tersebut, jabarkan setiap poin-poin yang ada mulai dari pengantar, hingga kesimpulan. Mari kita mulai dari tujuan aplikasi dan sasaran pengguna yang ada di bab pengantar. Anda dapat menuliskan bagian pengantar sebagai berikut:

Pengantar
Tujuan Aplikasi: 
Pengguna dapat mengakses suatu halaman web setelah melakukan proses autentikasi dengan memasukkan username dan password.

Sasaran Pengguna:
Semua pengguna atau masyarakat umum yang sudah memiliki hak akses dalam website.



Setelah itu, lanjutkan untuk menjabarkan kebutuhan pengguna yang berupa deskripsi umum dan kegunaan dari aplikasi untuk pengguna seperti berikut:

Kebutuhan Pengguna
Deskripsi Umum Aplikasi:
Autentikasi dari sebuah halaman website adalah hal yang penting. Kita harus mengetahui elemen apa saja yang dibutuhkan untuk masuk ke halaman website seperti email, password, dan tombol login.

Ketika pengguna berhasil melakukan autentikasi dengan memasukkan email dan password dengan benar, maka ia dapat mengakses konten website yang ada di dalamnya. Sedangkan jika pengguna tidak berhasil melakukan proses autentikasi, pengguna tidak dapat mengakses konten yang ada dan harus memeriksa kembali apakah email dan password yang dimasukkan sudah benar.

Supaya lebih aman, ketika pengguna selesai mengakses konten website, ia dapat melakukan proses logout dengan menekan tombol logout yang ada di dalam halaman website tersebut. Setelah logout, pengguna akan keluar dari konten halaman website dan harus melakukan autentikasi kembali untuk bisa masuk.

Kegunaan Aplikasi:

Pengguna dapat masuk (login) untuk mengakses konten yang ada di halaman website.
Aplikasi dapat memeriksa penulisan format email di dalam form pengisian email.
Pengguna dapat memasukkan password dengan aman karena antarmuka form password tersamarkan tampilannya.
Pengguna dapat keluar (logout) dari halaman konten website dengan menekan tombol logout.


Kemudian jabarkan elemen-elemen yang ada di bab spesifikasi, seperti kebutuhan fungsional,non fungsional, antarmuka pengguna (user interface), antarmuka perangkat keras (hardware interface).

Spesifikasi Kebutuhan Sistem
Kebutuhan Fungsional

Pengguna dapat memasukkan email dan password pada form yang disediakan. Kemudian ketika tombol login ditekan, pengguna yang sudah melengkapi email dan password untuk mengakses konten halaman website.
Pengguna dapat keluar dari konten halaman website dengan menekan tombol logout.
Kebutuhan Non Fungsional

Ketika pengguna memasukkan email di dalam form email, sistem dapat memeriksa apakah inputan tersebut sudah sesuai dengan struktur email yang benar. Jika tidak sesuai, pengguna diberi pengingat bahwa belum mengisi form email dengan benar.
Ketika pengguna memasukkan password di dalam form password, sistem dapat menyembunyikan setiap huruf yang diketikkan. Sehingga, pengguna akan merasa aman ketika mengetik passwordnya di tempat umum sekalipun.
Antarmuka Pengguna (User interface)

Perangkat lunak front-end: HTML dan CSS
Perangkat lunak back-end: JavaScript
Antarmuka perangkat keras (Hardware interface)

Komputer atau ponsel cerdas dengan browser yang sudah terinstal di dalamnya


Terakhir, uraikan rencana pengembangan sistem sistem, seperti berikut:

Rencana Pengembangan Sistem:
Dalam pengembangan sistem ke depannya, pengembang software akan menambahkan fitur sebagai berikut:
Enkripsi password pada aplikasi autentikasi halaman website.
Pengecekan panjang password yang harus memiliki minimal 6 karakter.

Studi Kasus Pembuatan Dokumen Spesifikasi Kebutuhan Perangkat Lunak
  

Transkrip

Hai!

Setelah mengetahui kegunaan dan struktur penulisan dokumen SKPL, mari kita mulai membuat dokumen SKPL berdasarkan studi kasus tertentu.



Tujuan
Studi Kasus ini bertujuan untuk memperdalam materi tentang dokumen Spesifikasi Kebutuhan Perangkat Lunak (SKPL). Kita akan menggunakan struktur dokumen SKPL seperti pembahasan materi sebelumnya, tetapi dengan penyesuaian khusus berdasarkan aplikasi yang ingin kita buat. Beberapa bagian dari studi kasus ini akan menjawab beberapa pertanyaan umum seperti:

Bagaimana gambaran umum dari aplikasi yang akan dikembangkan?
Bagaimana cara kerja sistem yang akan dikembangkan?
Apa yang akan didapatkan oleh pengguna?
Teknologi apa saja yang digunakan dalam aplikasi?


Tahapan Proses
Kali ini kita akan membuat sebuah dokumen SKPL untuk membuat autentikasi dari halaman website. Tenang saja, kita hanya membahas fitur login dan logout dari halaman website secara sederhana.

Pertama, Anda perlu menuliskan struktur kerangka dasar dokumen SKPL. Karena contoh autentikasi website yang akan kita buat cukup sederhana, maka kerangka yang diperlukan adalah sebagai berikut:

Pengantar
Tujuan Aplikasi
Sasaran Pengguna
Kebutuhan Pengguna
Deskripsi umum dari aplikasi
Kegunaan aplikasi bagi pengguna
Spesifikasi Kebutuhan Sistem
Kebutuhan fungsional
Kebutuhan non fungsional
Antarmuka Pengguna (User interface)
Antarmuka perangkat keras (Hardware interface)
Rencana Pengembangan Sistem
Dari kerangka tersebut, jabarkan setiap poin-poin yang ada mulai dari pengantar, hingga kesimpulan. Mari kita mulai dari tujuan aplikasi dan sasaran pengguna yang ada di bab pengantar. Anda dapat menuliskan bagian pengantar sebagai berikut:

Pengantar
Tujuan Aplikasi: 
Pengguna dapat mengakses suatu halaman web setelah melakukan proses autentikasi dengan memasukkan username dan password.

Sasaran Pengguna:
Semua pengguna atau masyarakat umum yang sudah memiliki hak akses dalam website.



Setelah itu, lanjutkan untuk menjabarkan kebutuhan pengguna yang berupa deskripsi umum dan kegunaan dari aplikasi untuk pengguna seperti berikut:

Kebutuhan Pengguna
Deskripsi Umum Aplikasi:
Autentikasi dari sebuah halaman website adalah hal yang penting. Kita harus mengetahui elemen apa saja yang dibutuhkan untuk masuk ke halaman website seperti email, password, dan tombol login.

Ketika pengguna berhasil melakukan autentikasi dengan memasukkan email dan password dengan benar, maka ia dapat mengakses konten website yang ada di dalamnya. Sedangkan jika pengguna tidak berhasil melakukan proses autentikasi, pengguna tidak dapat mengakses konten yang ada dan harus memeriksa kembali apakah email dan password yang dimasukkan sudah benar.

Supaya lebih aman, ketika pengguna selesai mengakses konten website, ia dapat melakukan proses logout dengan menekan tombol logout yang ada di dalam halaman website tersebut. Setelah logout, pengguna akan keluar dari konten halaman website dan harus melakukan autentikasi kembali untuk bisa masuk.

Kegunaan Aplikasi:

Pengguna dapat masuk (login) untuk mengakses konten yang ada di halaman website.
Aplikasi dapat memeriksa penulisan format email di dalam form pengisian email.
Pengguna dapat memasukkan password dengan aman karena antarmuka form password tersamarkan tampilannya.
Pengguna dapat keluar (logout) dari halaman konten website dengan menekan tombol logout.


Kemudian jabarkan elemen-elemen yang ada di bab spesifikasi, seperti kebutuhan fungsional,non fungsional, antarmuka pengguna (user interface), antarmuka perangkat keras (hardware interface).

Spesifikasi Kebutuhan Sistem
Kebutuhan Fungsional

Pengguna dapat memasukkan email dan password pada form yang disediakan. Kemudian ketika tombol login ditekan, pengguna yang sudah melengkapi email dan password untuk mengakses konten halaman website.
Pengguna dapat keluar dari konten halaman website dengan menekan tombol logout.
Kebutuhan Non Fungsional

Ketika pengguna memasukkan email di dalam form email, sistem dapat memeriksa apakah inputan tersebut sudah sesuai dengan struktur email yang benar. Jika tidak sesuai, pengguna diberi pengingat bahwa belum mengisi form email dengan benar.
Ketika pengguna memasukkan password di dalam form password, sistem dapat menyembunyikan setiap huruf yang diketikkan. Sehingga, pengguna akan merasa aman ketika mengetik passwordnya di tempat umum sekalipun.
Antarmuka Pengguna (User interface)

Perangkat lunak front-end: HTML dan CSS
Perangkat lunak back-end: JavaScript
Antarmuka perangkat keras (Hardware interface)

Komputer atau ponsel cerdas dengan browser yang sudah terinstal di dalamnya


Terakhir, uraikan rencana pengembangan sistem sistem, seperti berikut:

Rencana Pengembangan Sistem:
Dalam pengembangan sistem ke depannya, pengembang software akan menambahkan fitur sebagai berikut:
Enkripsi password pada aplikasi autentikasi halaman website.
Pengecekan panjang password yang harus memiliki minimal 6 karakter.


Nah, dari semua bab yang sudah kita buat, gabungkan menjadi satu dokumen SKPL Autentikasi Halaman Website. Sehingga hasil akhirnya seperti berikut:

Dokumen Spesifikasi Kebutuhan Perangkat Lunak Autentikasi Halaman Website

Pengantar
Tujuan Aplikasi:
Pengguna dapat mengakses isi dari halaman web setelah melakukan proses autentikasi dengan memasukkan username dan password.
Sasaran Pengguna:
Semua pengguna atau masyarakat umum yang sudah memiliki hak akses dalam website
Kebutuhan Pengguna
Deskripsi Umum Aplikasi:
Autentikasi dari sebuah halaman website adalah hal yang penting. Kita harus mengetahui elemen apa saja yang dibutuhkan untuk masuk ke halaman website seperti email, password, dan tombol login.

Ketika pengguna berhasil melakukan autentikasi dengan memasukkan email dan password dengan benar, maka ia dapat mengakses konten website yang ada di dalamnya. Sedangkan jika pengguna tidak berhasil melakukan proses autentikasi, pengguna tidak dapat mengakses konten yang ada dan harus memeriksa kembali apakah email dan password yang dimasukkan sudah benar.

Supaya lebih aman, ketika pengguna selesai mengakses konten website, ia dapat melakukan proses logout dengan menekan tombol logout yang ada di dalam halaman website tersebut. Setelah logout, pengguna akan keluar dari konten halaman website dan harus melakukan autentikasi kembali untuk bisa masuk.


Kegunaan Aplikasi:

Pengguna dapat masuk (login) untuk mengakses konten yang ada di halaman website.
Aplikasi dapat memeriksa penulisan format email di dalam form pengisian email.
Pengguna dapat memasukkan password dengan aman karena antarmuka form password tersamarkan visibility-nya.
Pengguna dapat keluar (logout) dari halaman konten website dengan menekan tombol logout.
Spesifikasi Kebutuhan Sistem
Kebutuhan Fungsional
Sistem menyediakan form login yang berisi email dan password yang harus diisi pengguna. Kemudian di sana juga terdapat tombol login. Ketika tombol tersebut ditekan, pengguna yang sudah melengkapi email dan password dengan benar dapat mengakses konten halaman website.
Pengguna dapat keluar dari konten halaman website dengan menekan tombol logout.

Kebutuhan Non Fungsional
Ketika pengguna memasukkan email di dalam form email, sistem dapat memeriksa apakah inputan tersebut sudah sesuai dengan struktur email yang benar. Jika tidak sesuai, pengguna diberi pengingat bahwa belum mengisi form email dengan benar.
Ketika pengguna memasukkan password di dalam form password, sistem dapat menyembunyikan setiap huruf yang diketikkan. Sehingga, pengguna akan merasa aman ketika mengetik passwordnya di tempat umum sekalipun.
Ketika proses autentikasi tidak berhasil, sistem menampilkan informasi bahwa terjadi kesalahan pengisian data email atau password.

Antarmuka Pengguna (User interface)
Perangkat lunak front-end: HTML dan CSS
Perangkat lunak back-end: JavaScript

Antarmuka perangkat keras (Hardware interface)
Komputer atau ponsel cerdas dengan browser yang sudah terinstal di dalamnya.


Rencana Pengembangan Sistem:
Dalam pengembangan sistem ke depannya, pengembang software akan menambahkan fitur sebagai berikut:
Enkripsi password pada aplikasi autentikasi halaman website.
Pengecekan panjang password yang harus memiliki minimal 6 karakter.


